version: 2
jobs:
  install:
    docker:
      - image: circleci/python:3.7.4
        environment:
          DATABASE_URL: postgresql://circleci:456@localhost:5432/example
      - image: circleci/postgres:9.4
        environment:
            POSTGRES_USER: circleci
            POSTGRES_DB: example
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            pip install -r requirements/dev.txt --user
            sleep 1
            flask db upgrade
            flask test
      - save_cache:
          paths: 
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
  back-deploy-heroku:
    docker:
      - image: buildpack-deps:trusty
    steps:
       - checkout
       - run:
           name: Heroku Deploy
           command: |
             git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
       - run:
           name: Smoke Test
           command: |
             # Heroku deploy command will pass even if application crashes. Simple smoke test to make sure app is up.
             HTTPCODE=`curl -s -o /dev/null -w "%{http_code}" https://$HEROKU_APP_NAME.herokuapp.com/api/articles`
             if [ "$HTTPCODE" -ne 200 ];then
                 echo "heroku app not responding, failing deploy"
                 exit 1
             fi
  docker-build-and-push:
    working_directory: /dockerapp
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - deploy:
          name: Publish application to docker hub
          command: |
            docker login -e $DOCKER_HUB_EMAIL -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker tag app $DOCKER_HUB_USER_ID/my-python-ci:$CIRCLE_BUILD_NUM
            docker tag app $DOCKER_HUB_USER_ID/my-python-ci:latest
            docker push $DOCKER_HUB_USER_ID/my-python-ci:$CIRCLE_BUILD_NUM
            docker push $DOCKER_HUB_USER_ID/my-python-ci:latest
workflows:
  version: 2
  build-and-test:
    jobs:
      - install
      - back-deploy-heroku:
          requires:
            - install
      - docker-build-and-push:
          requires:
            - back-deploy-heroku
